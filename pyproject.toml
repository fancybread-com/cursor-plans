[project]
name = "cursor-plans"
version = "0.1.0"
description = "A Terraform-like DSL for structured software development planning with Cursor"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Paul" }]
keywords = ["mcp", "cursor", "development", "planning", "terraform", "dsl", "infrastructure-as-code"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Testing",
]
dependencies = ["anyio>=4.5", "click>=8.2.0", "httpx>=0.27", "mcp", "pydantic>=2.0", "pyyaml>=6.0"]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.6.9",
    "pyright>=1.1.378",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "build>=1.0.0",
]

[project.scripts]
cursor-plans = "cursor_plans_mcp.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/cursor_plans_mcp"]

[tool.pyright]
include = ["src/cursor_plans_mcp"]
venvPath = "."
venv = ".venv"
reportAttributeAccessIssue = "none"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = []

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.uv]
dev-dependencies = ["pyright>=1.1.378", "pytest>=8.3.3", "ruff>=0.6.9"]
